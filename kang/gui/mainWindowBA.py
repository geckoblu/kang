# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainWindowBA.ui'
#
# Created by: PyQt5 UI code generator 5.14.1
#
# WARNING! All changes made in this file will be lost!

# FIXME Currently is manually edited, should be generated

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindowBA(object):
    def setupUi(self, MainWindowBA):
        MainWindowBA.setObjectName("MainWindowBA")
        MainWindowBA.resize(497, 718)
        self.widget = QtWidgets.QWidget(MainWindowBA)
        self.widget.setObjectName("widget")
        self.gridlayout = QtWidgets.QGridLayout(self.widget)
        self.gridlayout.setContentsMargins(11, 11, 11, 11)
        self.gridlayout.setSpacing(6)
        self.gridlayout.setObjectName("gridlayout")
        self.groupBox2 = QtWidgets.QGroupBox(self.widget)
        self.groupBox2.setCheckable(False)
        self.groupBox2.setObjectName("groupBox2")
        self.buttonGroup2 = QtWidgets.QButtonGroup(self.groupBox2)
        self.buttonGroup2.setObjectName("buttonGroup2")
        self.hboxlayout = QtWidgets.QHBoxLayout(self.groupBox2)
        self.hboxlayout.setContentsMargins(11, 11, 11, 11)
        self.hboxlayout.setSpacing(6)
        self.hboxlayout.setObjectName("hboxlayout")
        self.ignorecaseCheckBox = QtWidgets.QCheckBox(self.groupBox2)
        self.ignorecaseCheckBox.setObjectName("ignorecaseCheckBox")
        self.hboxlayout.addWidget(self.ignorecaseCheckBox)
        self.multilineCheckBox = QtWidgets.QCheckBox(self.groupBox2)
        self.multilineCheckBox.setObjectName("multilineCheckBox")
        self.hboxlayout.addWidget(self.multilineCheckBox)
        self.dotallCheckBox = QtWidgets.QCheckBox(self.groupBox2)
        self.dotallCheckBox.setObjectName("dotallCheckBox")
        self.hboxlayout.addWidget(self.dotallCheckBox)
        self.verboseCheckBox = QtWidgets.QCheckBox(self.groupBox2)
        self.verboseCheckBox.setObjectName("verboseCheckBox")
        self.hboxlayout.addWidget(self.verboseCheckBox)
        self.localeCheckBox = QtWidgets.QCheckBox(self.groupBox2)
        self.localeCheckBox.setObjectName("localeCheckBox")
        self.hboxlayout.addWidget(self.localeCheckBox)
        self.unicodeCheckBox = QtWidgets.QCheckBox(self.groupBox2)
        self.unicodeCheckBox.setObjectName("unicodeCheckBox")
        self.hboxlayout.addWidget(self.unicodeCheckBox)
        self.gridlayout.addWidget(self.groupBox2, 1, 0, 1, 1)
        self.groupBox1 = QtWidgets.QGroupBox(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox1.sizePolicy().hasHeightForWidth())
        self.groupBox1.setSizePolicy(sizePolicy)
        self.groupBox1.setCheckable(False)
        self.groupBox1.setProperty("lineWidth", 1)
        self.groupBox1.setObjectName("groupBox1")
        self.gridlayout1 = QtWidgets.QGridLayout(self.groupBox1)
        self.gridlayout1.setContentsMargins(11, 11, 11, 11)
        self.gridlayout1.setSpacing(6)
        self.gridlayout1.setObjectName("gridlayout1")
        self.regexMultiLineEdit = QtWidgets.QTextEdit(self.groupBox1)
        self.regexMultiLineEdit.setProperty("text", "")
        self.regexMultiLineEdit.setObjectName("regexMultiLineEdit")
        self.gridlayout1.addWidget(self.regexMultiLineEdit, 0, 0, 1, 1)
        self.gridlayout.addWidget(self.groupBox1, 0, 0, 1, 1)
        self.resultTabWidget = QtWidgets.QTabWidget(self.widget)
        self.resultTabWidget.setObjectName("resultTabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.gridlayout2 = QtWidgets.QGridLayout(self.tab)
        self.gridlayout2.setContentsMargins(11, 11, 11, 11)
        self.gridlayout2.setSpacing(6)
        self.gridlayout2.setObjectName("gridlayout2")
        self.groupTable = QtWidgets.QTableWidget(self.tab)
        self.groupTable.setColumnCount(2)
        self.groupTable.setObjectName("groupTable")
        self.groupTable.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.groupTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.groupTable.setHorizontalHeaderItem(1, item)
        self.gridlayout2.addWidget(self.groupTable, 0, 0, 1, 1)
        self.resultTabWidget.addTab(self.tab, "")
        self.tab1 = QtWidgets.QWidget()
        self.tab1.setObjectName("tab1")
        self.gridlayout3 = QtWidgets.QGridLayout(self.tab1)
        self.gridlayout3.setContentsMargins(11, 11, 11, 11)
        self.gridlayout3.setSpacing(6)
        self.gridlayout3.setObjectName("gridlayout3")
        self.matchTextBrowser = QtWidgets.QTextBrowser(self.tab1)
        self.matchTextBrowser.setObjectName("matchTextBrowser")
        self.gridlayout3.addWidget(self.matchTextBrowser, 0, 0, 1, 1)
        self.resultTabWidget.addTab(self.tab1, "")
        self.TabPage = QtWidgets.QWidget()
        self.TabPage.setObjectName("TabPage")
        self.gridlayout4 = QtWidgets.QGridLayout(self.TabPage)
        self.gridlayout4.setContentsMargins(11, 11, 11, 11)
        self.gridlayout4.setSpacing(6)
        self.gridlayout4.setObjectName("gridlayout4")
        self.matchAllTextBrowser = QtWidgets.QTextBrowser(self.TabPage)
        self.matchAllTextBrowser.setObjectName("matchAllTextBrowser")
        self.gridlayout4.addWidget(self.matchAllTextBrowser, 0, 0, 1, 1)
        self.resultTabWidget.addTab(self.TabPage, "")
        self.TabPage1 = QtWidgets.QWidget()
        self.TabPage1.setObjectName("TabPage1")
        self.vboxlayout = QtWidgets.QVBoxLayout(self.TabPage1)
        self.vboxlayout.setContentsMargins(11, 11, 11, 11)
        self.vboxlayout.setSpacing(6)
        self.vboxlayout.setObjectName("vboxlayout")
        self.replaceTextBrowser = QtWidgets.QTextBrowser(self.TabPage1)
        self.replaceTextBrowser.setObjectName("replaceTextBrowser")
        self.vboxlayout.addWidget(self.replaceTextBrowser)
        self.resultTabWidget.addTab(self.TabPage1, "")
        self.TabPage2 = QtWidgets.QWidget()
        self.TabPage2.setObjectName("TabPage2")
        self.gridlayout5 = QtWidgets.QGridLayout(self.TabPage2)
        self.gridlayout5.setContentsMargins(11, 11, 11, 11)
        self.gridlayout5.setSpacing(6)
        self.gridlayout5.setObjectName("gridlayout5")
        self.codeTextBrowser = QtWidgets.QTextBrowser(self.TabPage2)
        self.codeTextBrowser.setObjectName("codeTextBrowser")
        self.gridlayout5.addWidget(self.codeTextBrowser, 0, 0, 1, 1)
        self.resultTabWidget.addTab(self.TabPage2, "")
        self.gridlayout.addWidget(self.resultTabWidget, 4, 0, 1, 1)
        self.tabWidget3 = QtWidgets.QTabWidget(self.widget)
        self.tabWidget3.setObjectName("tabWidget3")
        self.tab2 = QtWidgets.QWidget()
        self.tab2.setObjectName("tab2")
        self.gridlayout6 = QtWidgets.QGridLayout(self.tab2)
        self.gridlayout6.setContentsMargins(11, 11, 11, 11)
        self.gridlayout6.setSpacing(6)
        self.gridlayout6.setObjectName("gridlayout6")
        self.stringMultiLineEdit = QtWidgets.QTextEdit(self.tab2)
        self.stringMultiLineEdit.setObjectName("stringMultiLineEdit")
        self.gridlayout6.addWidget(self.stringMultiLineEdit, 0, 0, 1, 1)
        self.tabWidget3.addTab(self.tab2, "")
        self.tab3 = QtWidgets.QWidget()
        self.tab3.setObjectName("tab3")
        self.gridlayout7 = QtWidgets.QGridLayout(self.tab3)
        self.gridlayout7.setContentsMargins(11, 11, 11, 11)
        self.gridlayout7.setSpacing(6)
        self.gridlayout7.setObjectName("gridlayout7")
        self.replaceTextEdit = QtWidgets.QTextEdit(self.tab3)
        self.replaceTextEdit.setObjectName("replaceTextEdit")
        self.gridlayout7.addWidget(self.replaceTextEdit, 0, 0, 1, 1)
        self.tabWidget3.addTab(self.tab3, "")
        self.gridlayout.addWidget(self.tabWidget3, 2, 0, 1, 1)
        self.hboxlayout1 = QtWidgets.QHBoxLayout()
        self.hboxlayout1.setSpacing(6)
        self.hboxlayout1.setObjectName("hboxlayout1")
        spacerItem = QtWidgets.QSpacerItem(70, 31, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.hboxlayout1.addItem(spacerItem)
        self.textLabel1 = QtWidgets.QLabel(self.widget)
        self.textLabel1.setWordWrap(False)
        self.textLabel1.setObjectName("textLabel1")
        self.hboxlayout1.addWidget(self.textLabel1)
        self.matchNumberSpinBox = QtWidgets.QSpinBox(self.widget)
        self.matchNumberSpinBox.setMinimum(1)
        self.matchNumberSpinBox.setMaximum(9999)
        self.matchNumberSpinBox.setObjectName("matchNumberSpinBox")
        self.hboxlayout1.addWidget(self.matchNumberSpinBox)
        self.spacerLabel = QtWidgets.QLabel(self.widget)
        self.spacerLabel.setPixmap(QtGui.QPixmap("image1"))
        self.spacerLabel.setWordWrap(False)
        self.spacerLabel.setObjectName("spacerLabel")
        self.hboxlayout1.addWidget(self.spacerLabel)
        self.replaceLabel = QtWidgets.QLabel(self.widget)
        self.replaceLabel.setWordWrap(False)
        self.replaceLabel.setObjectName("replaceLabel")
        self.hboxlayout1.addWidget(self.replaceLabel)
        self.replaceNumberSpinBox = QtWidgets.QSpinBox(self.widget)
        self.replaceNumberSpinBox.setObjectName("replaceNumberSpinBox")
        self.hboxlayout1.addWidget(self.replaceNumberSpinBox)
        spacerItem1 = QtWidgets.QSpacerItem(118, 21, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.hboxlayout1.addItem(spacerItem1)
        self.gridlayout.addLayout(self.hboxlayout1, 3, 0, 1, 1)
        MainWindowBA.setCentralWidget(self.widget)
        self.toolBar = QtWidgets.QToolBar(MainWindowBA)
        self.toolBar.setObjectName("toolBar")
        MainWindowBA.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.menubar = QtWidgets.QMenuBar(MainWindowBA)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 497, 26))
        self.menubar.setObjectName("menubar")
        self.fileMenu = QtWidgets.QMenu(self.menubar)
        self.fileMenu.setObjectName("fileMenu")
        self.editMenu = QtWidgets.QMenu(self.menubar)
        self.editMenu.setObjectName("editMenu")
        self.helpMenu = QtWidgets.QMenu(self.menubar)
        self.helpMenu.setObjectName("helpMenu")
        MainWindowBA.setMenuBar(self.menubar)
        self.fileNewAction = QtWidgets.QAction(MainWindowBA)
        self.fileNewAction.setProperty("name", "fileNewAction")
        self.fileNewAction.setObjectName("fileNewAction")
        self.fileOpenAction = QtWidgets.QAction(MainWindowBA)
        self.fileOpenAction.setProperty("name", "fileOpenAction")
        self.fileOpenAction.setObjectName("fileOpenAction")
        self.fileSaveAction = QtWidgets.QAction(MainWindowBA)
        self.fileSaveAction.setProperty("name", "fileSaveAction")
        self.fileSaveAction.setObjectName("fileSaveAction")
        self.fileSaveAsAction = QtWidgets.QAction(MainWindowBA)
        self.fileSaveAsAction.setShortcut("")
        self.fileSaveAsAction.setProperty("name", "fileSaveAsAction")
        self.fileSaveAsAction.setObjectName("fileSaveAsAction")
        self.fileExitAction = QtWidgets.QAction(MainWindowBA)
        self.fileExitAction.setShortcut("")
        self.fileExitAction.setProperty("name", "fileExitAction")
        self.fileExitAction.setObjectName("fileExitAction")
        self.editUndoAction = QtWidgets.QAction(MainWindowBA)
        self.editUndoAction.setProperty("name", "editUndoAction")
        self.editUndoAction.setObjectName("editUndoAction")
        self.editRedoAction = QtWidgets.QAction(MainWindowBA)
        self.editRedoAction.setProperty("name", "editRedoAction")
        self.editRedoAction.setObjectName("editRedoAction")
        self.editCutAction = QtWidgets.QAction(MainWindowBA)
        self.editCutAction.setProperty("name", "editCutAction")
        self.editCutAction.setObjectName("editCutAction")
        self.editCopyAction = QtWidgets.QAction(MainWindowBA)
        self.editCopyAction.setProperty("name", "editCopyAction")
        self.editCopyAction.setObjectName("editCopyAction")
        self.editPasteAction = QtWidgets.QAction(MainWindowBA)
        self.editPasteAction.setProperty("name", "editPasteAction")
        self.editPasteAction.setObjectName("editPasteAction")
        self.examineAction = QtWidgets.QAction(MainWindowBA)
        self.examineAction.setCheckable(True)
        self.examineAction.setProperty("name", "examineAction")
        self.examineAction.setObjectName("examineAction")
        self.helpAboutAction = QtWidgets.QAction(MainWindowBA)
        self.helpAboutAction.setShortcut("")
        self.helpAboutAction.setProperty("name", "helpAboutAction")
        self.helpAboutAction.setObjectName("helpAboutAction")
        self.regexChangedAction = QtWidgets.QAction(MainWindowBA)
        self.regexChangedAction.setProperty("name", "regexChangedAction")
        self.regexChangedAction.setObjectName("regexChangedAction")
        self.editPauseAction = QtWidgets.QAction(MainWindowBA)
        self.editPauseAction.setCheckable(True)
        self.editPauseAction.setProperty("name", "editPauseAction")
        self.editPauseAction.setObjectName("editPauseAction")
        self.editPreferencesAction = QtWidgets.QAction(MainWindowBA)
        self.editPreferencesAction.setProperty("name", "editPreferencesAction")
        self.editPreferencesAction.setObjectName("editPreferencesAction")
        self.helpHelpAction = QtWidgets.QAction(MainWindowBA)
        self.helpHelpAction.setProperty("name", "helpHelpAction")
        self.helpHelpAction.setObjectName("helpHelpAction")
        self.helpPythonHelpAction = QtWidgets.QAction(MainWindowBA)
        self.helpPythonHelpAction.setProperty("name", "helpPythonHelpAction")
        self.helpPythonHelpAction.setObjectName("helpPythonHelpAction")
        self.helpRegexReferenceAction = QtWidgets.QAction(MainWindowBA)
        self.helpRegexReferenceAction.setProperty("name", "helpRegexReferenceAction")
        self.helpRegexReferenceAction.setObjectName("helpRegexReferenceAction")
        self.helpVisitWebsiteAction = QtWidgets.QAction(MainWindowBA)
        self.helpVisitWebsiteAction.setProperty("name", "helpVisitWebsiteAction")
        self.helpVisitWebsiteAction.setObjectName("helpVisitWebsiteAction")
        self.helpCheckForUpdateAction = QtWidgets.QAction(MainWindowBA)
        self.helpCheckForUpdateAction.setProperty("name", "helpCheckForUpdateAction")
        self.helpCheckForUpdateAction.setObjectName("helpCheckForUpdateAction")
        self.helpReportBugAction = QtWidgets.QAction(MainWindowBA)
        self.helpReportBugAction.setProperty("name", "helpReportBugAction")
        self.helpReportBugAction.setObjectName("helpReportBugAction")
        self.fileImportFileAction = QtWidgets.QAction(MainWindowBA)
        self.fileImportFileAction.setProperty("name", "fileImportFileAction")
        self.fileImportFileAction.setObjectName("fileImportFileAction")
        self.fileImportURLAction = QtWidgets.QAction(MainWindowBA)
        self.fileImportURLAction.setProperty("name", "fileImportURLAction")
        self.fileImportURLAction.setObjectName("fileImportURLAction")
        self.helpRegexLibAction = QtWidgets.QAction(MainWindowBA)
        self.helpRegexLibAction.setProperty("name", "helpRegexLibAction")
        self.helpRegexLibAction.setObjectName("helpRegexLibAction")
        self.fileRevertAction = QtWidgets.QAction(MainWindowBA)
        self.fileRevertAction.setProperty("name", "FileRevertAction")
        self.fileRevertAction.setObjectName("fileRevertAction")
        self.toolBar.addAction(self.fileOpenAction)
        self.toolBar.addAction(self.fileSaveAction)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.editCutAction)
        self.toolBar.addAction(self.editCopyAction)
        self.toolBar.addAction(self.editPasteAction)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.editPauseAction)
        self.toolBar.addAction(self.examineAction)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.helpRegexReferenceAction)
        self.toolBar.addAction(self.helpRegexLibAction)
        self.fileMenu.addAction(self.fileNewAction)
        self.fileMenu.addAction(self.fileOpenAction)
        self.fileMenu.addAction(self.fileSaveAction)
        self.fileMenu.addAction(self.fileSaveAsAction)
        self.fileMenu.addSeparator()
        self.fileMenu.addAction(self.fileRevertAction)
        self.fileMenu.addSeparator()
        self.fileMenu.addAction(self.fileImportFileAction)
        self.fileMenu.addAction(self.fileImportURLAction)
        self.fileMenu.addSeparator()
        self.fileMenu.addAction(self.fileExitAction)
        self.fileMenu.addSeparator()
        self.editMenu.addAction(self.editUndoAction)
        self.editMenu.addAction(self.editRedoAction)
        self.editMenu.addSeparator()
        self.editMenu.addAction(self.editCutAction)
        self.editMenu.addAction(self.editCopyAction)
        self.editMenu.addAction(self.editPasteAction)
        self.editMenu.addSeparator()
        self.editMenu.addAction(self.examineAction)
        self.editMenu.addAction(self.editPauseAction)
        self.editMenu.addSeparator()
        self.editMenu.addAction(self.editPreferencesAction)
        self.helpMenu.addSeparator()
        self.helpMenu.addAction(self.helpHelpAction)
        self.helpMenu.addAction(self.helpPythonHelpAction)
        self.helpMenu.addSeparator()
        self.helpMenu.addAction(self.helpRegexReferenceAction)
        self.helpMenu.addAction(self.helpRegexLibAction)
        self.helpMenu.addSeparator()
        self.helpMenu.addAction(self.helpVisitWebsiteAction)
        self.helpMenu.addSeparator()
        self.helpMenu.addAction(self.helpAboutAction)
        self.menubar.addAction(self.fileMenu.menuAction())
        self.menubar.addAction(self.editMenu.menuAction())
        self.menubar.addAction(self.helpMenu.menuAction())

        self.retranslateUi(MainWindowBA)
        self.resultTabWidget.setCurrentIndex(0)
        self.tabWidget3.setCurrentIndex(0)
        self.dotallCheckBox.toggled['bool'].connect(self.checkboxSlot)
        self.editCopyAction.triggered.connect(self.editCopy)
        self.editCutAction.triggered.connect(self.editCut)
        self.editPasteAction.triggered.connect(self.editPaste)
        self.editRedoAction.triggered.connect(self.editRedo)
        self.editUndoAction.triggered.connect(self.editUndo)
        self.examineAction.triggered.connect(self.examine)
        self.fileExitAction.triggered.connect(MainWindowBA.close)
        self.fileNewAction.triggered.connect(self.fileNew)
        self.fileOpenAction.triggered.connect(self.fileOpen)
        self.fileSaveAction.triggered.connect(self.fileSave)
        self.fileSaveAsAction.triggered.connect(self.fileSaveAs)
        self.helpAboutAction.triggered.connect(self.helpAbout)
        self.helpHelpAction.triggered.connect(self.helpHelp)
        self.ignorecaseCheckBox.toggled['bool'].connect(self.checkboxSlot)
        self.localeCheckBox.toggled['bool'].connect(self.checkboxSlot)
        self.matchNumberSpinBox.valueChanged['int'].connect(self.matchNumSlot)
        self.multilineCheckBox.toggled['bool'].connect(self.checkboxSlot)
        self.regexMultiLineEdit.textChanged.connect(self.regexChangedSlot)
        self.stringMultiLineEdit.textChanged.connect(self.stringChangedSlot)
        self.unicodeCheckBox.toggled['bool'].connect(self.checkboxSlot)
        self.verboseCheckBox.toggled['bool'].connect(self.checkboxSlot)
        self.editPauseAction.toggled['bool'].connect(self.pause)
        self.editPreferencesAction.triggered.connect(self.editPreferences)
        self.helpPythonHelpAction.triggered.connect(self.helpPythonRegex)
        self.helpRegexReferenceAction.triggered.connect(self.referenceGuide)
        self.helpVisitWebsiteAction.triggered.connect(self.helpVisitKangWebsite)
        self.replaceTextEdit.textChanged.connect(self.replaceChangedSlot)
        self.replaceNumberSpinBox.valueChanged['int'].connect(self.replaceNumSlot)
        self.fileImportFileAction.triggered.connect(self.importFile)
        self.fileImportURLAction.triggered.connect(self.importURL)
        self.helpRegexLibAction.triggered.connect(self.helpRegexLib)
        self.regexMultiLineEdit.textChanged.connect(self.edited)
        self.stringMultiLineEdit.textChanged.connect(self.edited)
        self.ignorecaseCheckBox.toggled['bool'].connect(self.edited)
        self.replaceTextEdit.textChanged.connect(self.edited)
        self.multilineCheckBox.toggled['bool'].connect(self.edited)
        self.dotallCheckBox.toggled['bool'].connect(self.edited)
        self.verboseCheckBox.toggled['bool'].connect(self.edited)
        self.localeCheckBox.toggled['bool'].connect(self.edited)
        self.unicodeCheckBox.toggled['bool'].connect(self.edited)
        self.fileRevertAction.triggered.connect(self.fileRevert)
        QtCore.QMetaObject.connectSlotsByName(MainWindowBA)
        MainWindowBA.setTabOrder(self.regexMultiLineEdit, self.stringMultiLineEdit)
        MainWindowBA.setTabOrder(self.stringMultiLineEdit, self.resultTabWidget)
        MainWindowBA.setTabOrder(self.resultTabWidget, self.ignorecaseCheckBox)
        MainWindowBA.setTabOrder(self.ignorecaseCheckBox, self.multilineCheckBox)
        MainWindowBA.setTabOrder(self.multilineCheckBox, self.dotallCheckBox)
        MainWindowBA.setTabOrder(self.dotallCheckBox, self.verboseCheckBox)
        MainWindowBA.setTabOrder(self.verboseCheckBox, self.localeCheckBox)
        MainWindowBA.setTabOrder(self.localeCheckBox, self.unicodeCheckBox)
        MainWindowBA.setTabOrder(self.unicodeCheckBox, self.matchNumberSpinBox)
        MainWindowBA.setTabOrder(self.matchNumberSpinBox, self.matchTextBrowser)
        MainWindowBA.setTabOrder(self.matchTextBrowser, self.codeTextBrowser)

    def retranslateUi(self, MainWindowBA):
        _translate = QtCore.QCoreApplication.translate
        MainWindowBA.setWindowTitle(_translate("MainWindowBA", "Kang - The Python Regular Expression Editor"))
        MainWindowBA.setWindowIconText(_translate("MainWindowBA", "Kang"))
        self.groupBox2.setTitle(_translate("MainWindowBA", "Flags"))
        self.ignorecaseCheckBox.setToolTip(_translate("MainWindowBA", "Perform case-insensitive matching; expressions like [A-Z] will match\n"
"lowercase letters, too. This is not affected by the current locale."))
        self.ignorecaseCheckBox.setText(_translate("MainWindowBA", "Ignore Case"))
        self.multilineCheckBox.setToolTip(_translate("MainWindowBA", "When specified, the pattern character \"^\" matches at the beginning of the \n"
"string and at the beginning of each line (immediately following each newline); \n"
"and the pattern character \"$\" matches at the end of the string and at the end \n"
"of each line (immediately preceding each newline). By default, \"^\" matches \n"
"only at the beginning of the string, and \"$\" only at the end of the string and \n"
"immediately before the newline (if any) at the end of the string."))
        self.multilineCheckBox.setText(_translate("MainWindowBA", "Multi Line"))
        self.dotallCheckBox.setToolTip(_translate("MainWindowBA", "Make the \".\" special character match any character at all, including a \n"
"newline; without this flag, \".\" will match anything except a newline."))
        self.dotallCheckBox.setText(_translate("MainWindowBA", "Dot All"))
        self.verboseCheckBox.setToolTip(_translate("MainWindowBA", "This flag allows you to write regular expressions that look nicer. Whitespace \n"
"within the pattern is ignored, except when in a character class or preceded by \n"
"an unescaped backslash, and, when a line contains a \"#\" neither in a character\n"
"class or preceded by an unescaped backslash, all characters from the leftmost \n"
"such \"#\" through the end of the line are ignored."))
        self.verboseCheckBox.setText(_translate("MainWindowBA", "Verbose"))
        self.localeCheckBox.setToolTip(_translate("MainWindowBA", "Make \\w, \\W, \\b, and \\B dependent on the current locale."))
        self.localeCheckBox.setText(_translate("MainWindowBA", "Locale"))
        self.unicodeCheckBox.setToolTip(_translate("MainWindowBA", "\"Make \\w, \\W, \\b, and \\B dependent on the Unicode character properties \n"
"database. New in Python version 2.0."))
        self.unicodeCheckBox.setText(_translate("MainWindowBA", "Unicode"))
        self.groupBox1.setTitle(_translate("MainWindowBA", "Regular Expression Pattern"))
        item = self.groupTable.horizontalHeaderItem(0)
        item.setText(_translate("MainWindowBA", "Group Name"))
        item = self.groupTable.horizontalHeaderItem(1)
        item.setText(_translate("MainWindowBA", "Match"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.tab), _translate("MainWindowBA", "Group"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.tab1), _translate("MainWindowBA", "Match"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.TabPage), _translate("MainWindowBA", "Match All"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.TabPage1), _translate("MainWindowBA", "Replace"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.TabPage2), _translate("MainWindowBA", "Sample Code"))
        self.tabWidget3.setTabText(self.tabWidget3.indexOf(self.tab2), _translate("MainWindowBA", "Search String"))
        self.tabWidget3.setTabText(self.tabWidget3.indexOf(self.tab3), _translate("MainWindowBA", "Replace String"))
        self.textLabel1.setText(_translate("MainWindowBA", "Match Number"))
        self.replaceLabel.setText(_translate("MainWindowBA", "Replace Number"))
        self.toolBar.setProperty("label", _translate("MainWindowBA", "Tools"))
        self.fileMenu.setTitle(_translate("MainWindowBA", "&File"))
        self.editMenu.setTitle(_translate("MainWindowBA", "&Edit"))
        self.helpMenu.setTitle(_translate("MainWindowBA", "&Help"))
        self.fileNewAction.setText(_translate("MainWindowBA", "&New"))
        self.fileNewAction.setIconText(_translate("MainWindowBA", "New"))
        self.fileNewAction.setShortcut(_translate("MainWindowBA", "Ctrl+N"))
        self.fileOpenAction.setText(_translate("MainWindowBA", "&Open..."))
        self.fileOpenAction.setIconText(_translate("MainWindowBA", "Open"))
        self.fileOpenAction.setShortcut(_translate("MainWindowBA", "Ctrl+O"))
        self.fileSaveAction.setText(_translate("MainWindowBA", "&Save"))
        self.fileSaveAction.setIconText(_translate("MainWindowBA", "Save"))
        self.fileSaveAction.setShortcut(_translate("MainWindowBA", "Ctrl+S"))
        self.fileSaveAsAction.setText(_translate("MainWindowBA", "Save &As..."))
        self.fileSaveAsAction.setIconText(_translate("MainWindowBA", "Save As"))
        self.fileExitAction.setText(_translate("MainWindowBA", "E&xit"))
        self.fileExitAction.setIconText(_translate("MainWindowBA", "Exit"))
        self.editUndoAction.setText(_translate("MainWindowBA", "&Undo"))
        self.editUndoAction.setIconText(_translate("MainWindowBA", "Undo"))
        self.editUndoAction.setShortcut(_translate("MainWindowBA", "Ctrl+Z"))
        self.editRedoAction.setText(_translate("MainWindowBA", "&Redo"))
        self.editRedoAction.setIconText(_translate("MainWindowBA", "Redo"))
        self.editRedoAction.setShortcut(_translate("MainWindowBA", "Ctrl+Y"))
        self.editCutAction.setText(_translate("MainWindowBA", "&Cut"))
        self.editCutAction.setIconText(_translate("MainWindowBA", "Cut"))
        self.editCutAction.setShortcut(_translate("MainWindowBA", "Ctrl+X"))
        self.editCopyAction.setText(_translate("MainWindowBA", "C&opy"))
        self.editCopyAction.setIconText(_translate("MainWindowBA", "Copy"))
        self.editCopyAction.setShortcut(_translate("MainWindowBA", "Ctrl+C"))
        self.editPasteAction.setText(_translate("MainWindowBA", "&Paste"))
        self.editPasteAction.setIconText(_translate("MainWindowBA", "Paste"))
        self.editPasteAction.setShortcut(_translate("MainWindowBA", "Ctrl+V"))
        self.examineAction.setText(_translate("MainWindowBA", "E&xamine Regex"))
        self.examineAction.setIconText(_translate("MainWindowBA", "Examine Regex for Match"))
        self.examineAction.setShortcut(_translate("MainWindowBA", "Ctrl+X"))
        self.helpAboutAction.setText(_translate("MainWindowBA", "&About"))
        self.helpAboutAction.setIconText(_translate("MainWindowBA", "About"))
        self.regexChangedAction.setText(_translate("MainWindowBA", "Action"))
        self.regexChangedAction.setIconText(_translate("MainWindowBA", "Action"))
        self.editPauseAction.setText(_translate("MainWindowBA", "Pause Processing"))
        self.editPauseAction.setIconText(_translate("MainWindowBA", "Pause Processing"))
        self.editPauseAction.setShortcut(_translate("MainWindowBA", "Ctrl+P"))
        self.editPreferencesAction.setText(_translate("MainWindowBA", "Preferences"))
        self.editPreferencesAction.setIconText(_translate("MainWindowBA", "Preferences"))
        self.helpHelpAction.setText(_translate("MainWindowBA", "Help"))
        self.helpHelpAction.setIconText(_translate("MainWindowBA", "Help"))
        self.helpHelpAction.setShortcut(_translate("MainWindowBA", "Ctrl+/"))
        self.helpPythonHelpAction.setText(_translate("MainWindowBA", "&Python Regex Help"))
        self.helpPythonHelpAction.setIconText(_translate("MainWindowBA", "Python Regex Help"))
        self.helpRegexReferenceAction.setText(_translate("MainWindowBA", "&Regex Reference Guide"))
        self.helpRegexReferenceAction.setIconText(_translate("MainWindowBA", "Regex Reference Guide"))
        self.helpRegexReferenceAction.setShortcut(_translate("MainWindowBA", "Ctrl+R"))
        self.helpVisitWebsiteAction.setText(_translate("MainWindowBA", "&Visit Kang Website"))
        self.helpVisitWebsiteAction.setIconText(_translate("MainWindowBA", "&Visit Kang Website"))
        self.helpCheckForUpdateAction.setText(_translate("MainWindowBA", "&Check for Kang Update"))
        self.helpCheckForUpdateAction.setIconText(_translate("MainWindowBA", "Check for Kang Update"))
        self.helpReportBugAction.setText(_translate("MainWindowBA", "Report a &Bug"))
        self.helpReportBugAction.setIconText(_translate("MainWindowBA", "Report a Bug"))
        self.fileImportFileAction.setText(_translate("MainWindowBA", "Import &File"))
        self.fileImportFileAction.setIconText(_translate("MainWindowBA", "Import File"))
        self.fileImportURLAction.setText(_translate("MainWindowBA", "Import &URL"))
        self.fileImportURLAction.setIconText(_translate("MainWindowBA", "Import URL"))
        self.helpRegexLibAction.setText(_translate("MainWindowBA", "Regex &Library"))
        self.helpRegexLibAction.setIconText(_translate("MainWindowBA", "Regex Library"))
        self.helpRegexLibAction.setToolTip(_translate("MainWindowBA", "Open the Regex Library"))
        self.helpRegexLibAction.setShortcut(_translate("MainWindowBA", "Ctrl+L"))
        self.fileRevertAction.setText(_translate("MainWindowBA", "&Revert Kang File"))
        self.fileRevertAction.setIconText(_translate("MainWindowBA", "Revert Kang File"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindowBA = QtWidgets.QMainWindow()
    ui = Ui_MainWindowBA()
    ui.setupUi(MainWindowBA)
    MainWindowBA.show()
    sys.exit(app.exec_())
